{"remainingRequest":"C:\\Users\\friss\\OneDrive\\Documentos\\GitHub\\motorLab\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\friss\\OneDrive\\Documentos\\GitHub\\motorLab\\src\\views\\About.vue?vue&type=template&id=039c5b43&","dependencies":[{"path":"C:\\Users\\friss\\OneDrive\\Documentos\\GitHub\\motorLab\\src\\views\\About.vue","mtime":1619571908733},{"path":"C:\\Users\\friss\\OneDrive\\Documentos\\GitHub\\motorLab\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\friss\\OneDrive\\Documentos\\GitHub\\motorLab\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\friss\\OneDrive\\Documentos\\GitHub\\motorLab\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\friss\\OneDrive\\Documentos\\GitHub\\motorLab\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}